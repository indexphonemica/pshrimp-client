{"version":3,"sources":["HelpText.js","MarkersMap.js","App.js","serviceWorker.js","index.js"],"names":["HelpText","props","react_default","a","createElement","id","href","className","MarkerWithPopup","popupText","position","Marker","Popup","MarkersMap","markers","data","map","m","key","Map","center","zoom","TileLayer","attribution","url","L","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","API_URL","window","location","protocol","ErrorDialog","err","errTxt","toString","test","slice","SearchResults","value","language","SearchResult","inventory_id","detailFn","onClick","language_name","phonemes","join","DetailPanel","doculect","SourcePanel","PhonemeMatrix","name","inv","consonants","inv_id","clicks","vowels","diphthongs","PhonemeArray","syllabic_consonants","tones","notes","split","x","authors_arr","source_author","authors","length","source_string","concat","source_title","source_year","source_bibkey_url","source_bibkey","source_url","size","contents","y","i","j","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","searchResults","shouldHaveSearchResults","searchError","detailResults","detailError","tabIndex","handleChange","bind","assertThisInitialized","handleSearch","detail","event","setState","target","preventDefault","search","queryURL","fetch","method","then","res","json","hasOwnProperty","Error","error","str","_this2","encodeURIComponent","replace","fetchJSON","catch","_this3","_this4","doculectRowToPopupText","row","onSubmit","type","onChange","esm","selectedIndex","onSelect","disabled","languages","forEach","undefined","glottocode","latitude","longitude","values","processMapData","Component","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.effc2954.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction HelpText(props) {\r\n\treturn (<div id='help'><h3>About</h3>\r\n\r\n                    <p>This is a search tool for the Index Phonemica database.</p>\r\n\r\n                    <h3>Searching</h3>\r\n\r\n                    <p>A search query is minimally composed of a <em>search term</em>. There are two types of search term.</p>\r\n\r\n                    <p>A <em>phoneme term</em> consists of a phoneme enclosed in forward slashes, optionally preceded by \"no\". This will find all doculects that have (or don't have, if there's a preceding \"no\") the given phoneme.</p>\r\n\r\n                    <p>For example, <code>/t̪ʙ/</code> will return all doculects that contain the phoneme represented in Index Phonemica by the text string <code>t̪ʙ</code>, and <code>no /m/</code> will return all doculects that do not contain the phoneme represented in Index Phonemica by the text string <code>/m/</code>.</p>\r\n\r\n                    <p>A <em>feature term</em> consists of a number (optionally preceded by a <code>&lt;</code> or <code>&gt;</code> sign), a space, and a string of pluses and minuses followed (with no intervening space) by the name of the feature to search. For example, <code>2 +coronal</code> will return all doculects with exactly two [+coronal] segments, and <code>&gt;30 +syllabic</code> will return all doculects with more than thirty vowels.</p>\r\n\r\n                    <p>For the numeric component of the feature term, <code>no</code> can be used to mean <code>0</code>, and <code>any</code> can be used to mean <code>+0</code>.</p>\r\n\r\n                    <p>To search for multiple feature values on the same phoneme, separate the feature components with a semicolon. For example, <code>any +syllabic;+consonantal</code> will return a list of doculects with syllabic consonants.</p>\r\n\r\n                    <p>Search terms may be joined by the logical operators <code>and</code> and <code>or</code>. These are postfix.</p>\r\n\r\n                    <p>To limit the search to languages with specific properties, use <code>field:value</code>. To limit the search to languages without specific properties, use <code>!field:value</code>. Values are case-insensitive, and properties of languages are taken from <a href=\"https://glottolog.org\">Glottolog</a>. For example, <code>country:australia</code> will return all doculects of languages that Glottolog lists as spoken in Australia. Spaces in the value must be replaced with underscores, as in <code>country:united_states</code>.</p>\r\n\r\n\r\n\r\n                    <h3>Examples</h3>\r\n\r\n                    <p className='example-text'>Find doculects with only two coronal consonants:</p>\r\n                    <code className='example'>2 +coronal</code>\r\n                    <p className='example-text'>Find doculects with three or fewer vowels:</p>\r\n                    <code className='example'>&lt;4 +syllabic</code>\r\n                    <p className='example-text'>Find doculects with three or fewer vowels or the phoneme /d/:</p>\r\n                    <code className='example'>&lt;4 +syllabic /d/ or</code>\r\n                    <p className='example-text'>Find doculects with no rounded segments:</p>\r\n                    <code className='example'>no +round</code>\r\n                    <p className='example-text'>Find doculects with /d/ and no /m/:</p>\r\n                    <code className='example'>/d/ no /m/ and</code>\r\n\r\n                    <h3>List of features</h3>\r\n                    <p>Index Phonemica's feature system is currently derived from <a href=\"https://phoible.org/\">PHOIBLE</a>'s, but the names of the features have been converted from camelCase to snake_case, and 'raisedLarynxEjective' and 'loweredLarynxImplosive' have been renamed to <code>ejective</code> and <code>implosive</code>.</p><code>\r\n                    <ul>\r\n                        <li>tone\r\n                        </li><li>stress\r\n                        </li><li>syllabic\r\n                        </li><li>short\r\n                        </li><li>long\r\n                        </li><li>consonantal\r\n                        </li><li>sonorant\r\n                        </li><li>continuant\r\n                        </li><li>delayed_release\r\n                        </li><li>approximant\r\n                        </li><li>tap\r\n                        </li><li>trill\r\n                        </li><li>nasal\r\n                        </li><li>lateral\r\n                        </li><li>labial\r\n                        </li><li>round\r\n                        </li><li>labiodental\r\n                        </li><li>coronal\r\n                        </li><li>anterior\r\n                        </li><li>distributed\r\n                        </li><li>strident\r\n                        </li><li>dorsal\r\n                        </li><li>high\r\n                        </li><li>low\r\n                        </li><li>front\r\n                        </li><li>back\r\n                        </li><li>tense\r\n                        </li><li>retracted_tongue_root\r\n                        </li><li>advanced_tongue_root\r\n                        </li><li>periodic_glottal_source\r\n                        </li><li>epilaryngeal_source\r\n                        </li><li>spread_glottis\r\n                        </li><li>constricted_glottis\r\n                        </li><li>fortis\r\n                        </li><li>ejective\r\n                        </li><li>implosive\r\n                        </li><li>click</li>\r\n                    </ul></code>\r\n                </div>)\r\n}\r\n\r\nexport {HelpText};","import React from 'react';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport { Map as LeafletMap, TileLayer, Marker, Popup } from 'react-leaflet';\r\n\r\n// fix react-leaflet markers - see https://github.com/PaulLeCam/react-leaflet/issues/453#issuecomment-410450387\r\nimport L from 'leaflet';\r\ndelete L.Icon.Default.prototype._getIconUrl;\r\nL.Icon.Default.mergeOptions({\r\n    iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\r\n    iconUrl: require('leaflet/dist/images/marker-icon.png'),\r\n    shadowUrl: require('leaflet/dist/images/marker-shadow.png')\r\n});\r\n\r\nfunction MarkerWithPopup(props) {\r\n  const popupText = props.popupText;\r\n  const position = props.position;\r\n\r\n  if (popupText) {\r\n    return (\r\n      <Marker position={position}>\r\n        <Popup>\r\n          {popupText}\r\n        </Popup>\r\n      </Marker>\r\n    ) \r\n  }\r\n\r\n  return <Marker position={position}/>\r\n}\r\n\r\nfunction MarkersMap(props) {\r\n  const center = [0,0];\r\n  const zoom = 1;\r\n\r\n  // React won't be happy if we pass in two markers that want the same position and popup text,\r\n  // but that shouldn't happen anyway.\r\n  const markers = props.data.map(m => <MarkerWithPopup position={m.position} popupText={m.popupText} key={m.position + m.popupText} />);\r\n\r\n  return (\r\n    <LeafletMap center={[0,0]} zoom='1'>\r\n      <TileLayer\r\n        attribution='Thunderforest'\r\n        url='https://{s}.tile.thunderforest.com/landscape/{z}/{x}/{y}.png?apikey=7ee1e377fdd34773b610a69bd8e96e6f'\r\n      />\r\n      {markers}\r\n    </LeafletMap>\r\n  );\r\n}\r\n\r\nexport {MarkersMap};","import React, { Component } from 'react';\r\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\r\nimport 'react-tabs/style/react-tabs.css';\r\nimport { HelpText } from './HelpText';\r\nimport { MarkersMap } from './MarkersMap';\r\nimport './App.css';\r\n\r\nconst API_URL = window.location.protocol + '//indexphonemica.herokuapp.com/api/';\r\n\r\nfunction encode(thing) {\r\n  return encodeURIComponent(thing.replace(/\\\\/g,'\\\\\\\\').replace(/&/g,'\\\\+').replace(/=/g,'\\\\e'));\r\n}\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value: '', \r\n      searchResults: [], \r\n      shouldHaveSearchResults: false, // don't display 'no results' on load\r\n      searchError: false,\r\n      detailResults: false,\r\n      detailError: false,\r\n      tabIndex: 0\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSearch = this.handleSearch.bind(this);\r\n    this.detail = this.detail.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({value: event.target.value});\r\n  }\r\n\r\n  handleSearch(event) {\r\n    event.preventDefault();\r\n\r\n    this.search(this.state.value);\r\n  }\r\n\r\n  fetchJSON(queryURL) {\r\n    return fetch(queryURL, {\r\n      method: \"GET\"\r\n    }).then(\r\n      res => res.json()\r\n    ).then(res => {\r\n      if (res.hasOwnProperty('error')) {\r\n        throw new Error(res.error);\r\n      } else {\r\n        return res;\r\n      }\r\n    });\r\n  }\r\n\r\n  search(str) {\r\n    const queryURL = API_URL + 'query/' + encode(str);\r\n    this.fetchJSON(queryURL, {\r\n      method: \"GET\"\r\n    }).then(\r\n      res => this.setState({\r\n        searchResults: res, \r\n        shouldHaveSearchResults: true,\r\n        searchError: false\r\n      })\r\n    ).catch(\r\n      err => this.setState({\r\n        searchResults: [],\r\n        shouldHaveSearchResults: false,\r\n        searchError: err\r\n      })\r\n    );\r\n  }\r\n\r\n  detail(id) {\r\n    const queryURL = API_URL + 'language/' + id;\r\n\r\n    fetch(queryURL, {\r\n      method: \"GET\"\r\n    }).then(\r\n      res => res.json()\r\n    ).then(res => { // add the ID so we can use that to make keys\r\n      res.id = id;\r\n      return res\r\n    }).then(\r\n      res => this.setState({detailResults: res, detailError: false, tabIndex: 1})\r\n    ).catch(\r\n      err => this.setState({detailResults: false, detailError: err, tabIndex: 1})\r\n    );\r\n  }\r\n\r\n  render () {\r\n    const doculectRowToPopupText = function (row) {\r\n      return `${row.language_name} (${row.inventory_id})`;\r\n    }\r\n    const processMapData = function (searchResults) {\r\n      var languages = {};\r\n      searchResults.forEach(function (row) {\r\n        if (languages[row.glottocode] === undefined) {\r\n          languages[row.glottocode] = {\r\n            'position':  [row.latitude || 0, row.longitude || 0]\r\n          , 'popupText': doculectRowToPopupText(row)\r\n          }\r\n        } else {\r\n          languages[row.glottocode].popupText += (', ' + doculectRowToPopupText(row));\r\n        }\r\n      });\r\n      return Object.values(languages);\r\n    }\r\n\r\n    return (\r\n      <main className=\"container\">\r\n        <div className=\"row\">\r\n          <section id=\"search\" className=\"col-sm\">\r\n            <form onSubmit={this.handleSearch}>\r\n              <div id=\"input-wrapper\">\r\n                <input id=\"in\" type=\"text\" value={this.state.value} onChange={this.handleChange} />\r\n              </div>\r\n              <input id=\"submit\" type=\"submit\" value=\"Search\" />\r\n            </form>\r\n            \r\n            <div id=\"res\">\r\n              <ErrorDialog err={this.state.searchError}/>\r\n              {this.state.shouldHaveSearchResults ? <SearchResults value={this.state.searchResults} detailFn={this.detail}/> : ''}\r\n            </div>\r\n          </section>\r\n\r\n          <section id=\"tabnav\" className=\"col-sm\">\r\n            <Tabs selectedIndex={this.state.tabIndex} onSelect={tabIndex => this.setState({ tabIndex })}>\r\n              <TabList>\r\n                <Tab>Help</Tab>\r\n                <Tab disabled={!this.state.detailResults}>Detail</Tab>\r\n                <Tab disabled={!this.state.searchResults}>Map</Tab>\r\n              </TabList>\r\n              <TabPanel>\r\n                <HelpText/>\r\n              </TabPanel>\r\n              <TabPanel>\r\n                {\r\n                  this.state.detailError ? <ErrorDialog err={this.state.detailError}/> \r\n                    : <DetailPanel language={this.state.detailResults} /> \r\n                }\r\n              </TabPanel>\r\n              <TabPanel>\r\n                <MarkersMap data={processMapData(this.state.searchResults)} />\r\n              </TabPanel>\r\n            </Tabs>\r\n          </section>\r\n        </div>\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\n// ----------------\r\n// -- Components --\r\n// ----------------\r\n\r\nfunction ErrorDialog(props) {\r\n  if (!props.err) return (<div></div>);\r\n  var errTxt = props.err.toString();\r\n\r\n  // make sure there's only one Error: before the text\r\n  if (!/[A-Za-z]*Error: /.test(errTxt)) errTxt = 'Error: ' + errTxt;\r\n  if (/Error: Error:/.test(errTxt)) errTxt = errTxt.slice(7);\r\n  return (\r\n    <div className='error'>\r\n      {errTxt}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction SearchResults(props) {\r\n  if (props.value === false) return (<div>No results</div>);\r\n  return (\r\n    <table>\r\n      <tbody>\r\n        {props.value.map(language => <SearchResult key={language.inventory_id} language={language} detailFn={props.detailFn} />)}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nfunction SearchResult(props) {\r\n  return (\r\n    <tr>\r\n      <td>\r\n        <button className='link-button' onClick={() => props.detailFn(props.language.inventory_id)}>\r\n          {props.language.language_name}\r\n        </button>\r\n      </td>\r\n      <td>\r\n        <button className='link-button' onClick={() => props.detailFn(props.language.inventory_id)}>\r\n          {props.language.inventory_id}\r\n        </button>\r\n      </td>\r\n      <td>\r\n        {props.language.phonemes ? props.language.phonemes.join(' ') : ''}\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nfunction DetailPanel(props) {\r\n  const doculect = props.language;\r\n  return (\r\n  <div className='sticky-wrapper-wrapper'>\r\n    <div className='sticky-wrapper'>\r\n      <div className='sticky-panel'>\r\n        <div>\r\n          <h3>{ doculect.language_name }</h3>\r\n          <SourcePanel doculect={ doculect } />\r\n        </div>\r\n        <PhonemeMatrix name='Consonants' inv={ doculect.consonants } inv_id={ doculect.id } />\r\n        <PhonemeMatrix name='Clicks' inv={ doculect.clicks } inv_id={ doculect.id } />\r\n        <PhonemeMatrix name='Vowels' inv={ doculect.vowels } inv_id={ doculect.id } />\r\n        <PhonemeMatrix name='Diphthongs' inv= { doculect.diphthongs } inv_id={ doculect.id } />\r\n        <PhonemeArray name='Syllabic consonants' inv={ doculect.syllabic_consonants } inv_id={ doculect.id } />\r\n        <PhonemeArray name='Tones' inv={ doculect.tones } inv_id={ doculect.id } />\r\n        <div>\r\n          { doculect.notes ? <h4>Notes</h4> : '' }\r\n          { (doculect.notes || '').split('\\n').map(x => (<p key={x}>{x}</p>)) }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>);\r\n}\r\n\r\nfunction SourcePanel(props) {\r\n  // Note 'doculect' here - this is correct; the rest of the code is lacking zhengming (TODO)\r\n  const doculect = props.doculect;\r\n\r\n  // Format author list\r\n  // If there are multiple authors, use the format Lastname(, Lastname...) & Lastname.\r\n  // If there's only one author, use Lastname, Firstname.\r\n  const authors_arr = doculect.source_author.split(';');\r\n  const authors = (\r\n    (authors_arr.length > 1) ? \r\n      (authors_arr.slice(0, authors_arr.length-1).map(x => x.split(',')[0]).join(', ') \r\n        + ' & ' \r\n        + authors_arr[authors_arr.length-1].split(',')[0])\r\n      : authors_arr[0])\r\n  const source_string = `${doculect.source_title}. ${authors}. ${doculect.source_year}`\r\n\r\n  const source_bibkey_url = `https://glottolog.org/resource/reference/id/${ doculect.source_bibkey }`\r\n\r\n  return (\r\n      <div>\r\n        <p>\r\n          { source_string }\r\n        </p>\r\n        <p>\r\n          <a href={source_bibkey_url}>\r\n            {doculect.source_bibkey}\r\n          </a>\r\n          <a href={doculect.source_url}>\r\n            { doculect.source_url ? '🔗' : '' }\r\n          </a>\r\n        </p>\r\n      </div>\r\n  )\r\n}\r\n\r\nfunction PhonemeMatrix(props) {\r\n  const size = props.inv.size;\r\n  if (size === 0) return (<div></div>);\r\n  const contents = props.inv.contents;\r\n\r\n  // TODO this is pretty hairy - there must be a better way!\r\n  return (<div>\r\n    <h4 className='language-segments'>{ props.name } ({ size })</h4>\r\n    <table className='inventory'><tbody>\r\n      {contents.map((y, i) => \r\n        <tr key={`${props.inv_id}-${i}`}>\r\n          {y.map((x, j) => \r\n            <td key={`${props.inv_id}-${i}-${j}}`}>\r\n              { x.join(' ') }\r\n            </td>)}\r\n        </tr>)}\r\n    </tbody></table>\r\n  </div>)\r\n}\r\n\r\nfunction PhonemeArray(props) {\r\n  const size = props.inv.size;\r\n  if (size === 0) return (<div></div>);\r\n  const contents = props.inv.contents;\r\n\r\n  return (<div>\r\n    <h4 className='language-segments'>{ props.name } ({ size })</h4>\r\n    <span>{ contents.join(' ') }</span>\r\n  </div>)\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}