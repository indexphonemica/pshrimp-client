{"version":3,"sources":["MarkersMap.js","iphon.js","App.js","serviceWorker.js","index.js"],"names":["MarkerWithPopup","props","popupText","position","react_default","a","createElement","Marker","Popup","MarkersMap","markers","data","map","m","key","Map","center","zoom","TileLayer","attribution","url","L","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","SourceCell","className","onClick","detailFn","language","inventory_id","SourcePanel","doculect","authors_arr","source_author","split","authors","length","slice","x","join","source_string","concat","source_title","source_year","source_bibkey_url","source_bibkey","language_name","DialectInfoBox","href","source_url","dialect_link","dialect","dialect_name","HelpText","id","API_URL","window","location","protocol","encode","thing","encodeURIComponent","toString","replace","decode","decodeURIComponent","getHash","hash","res","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","tmp","value","err","return","setHash","k","v","Object","keys","writeHash","SearchingIcon","ErrorDialog","errTxt","test","SearchResults","SearchResult","phonemes","Segments","segments","DetailPanel","PhonemeMatrix","name","inv","consonants","inv_id","clicks","vowels","diphthongs","PhonemeArray","syllabic_consonants","tones","notes","size","contents","y","i","j","openBrace","closeBrace","marginal","loan","segment","Segment","App","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","tabIndex","hasOwnProperty","detail","state","searchResults","shouldHaveSearchResults","searchLoading","searchError","detailResults","detailError","handleChange","bind","assertThisInitialized","handleSearch","search","e","event","setState","target","preventDefault","queryURL","fetch","method","then","json","Error","error","str","_this2","searching","fetchJSON","catch","_this3","_this4","doculectRowToPopupText","row","onSubmit","type","onChange","esm","selectedIndex","onSelect","disabled","languages","forEach","glottocode","latitude","longitude","values","processMapData","Component","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e7e4cb2a.chunk.js","sourcesContent":["import React from 'react';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport { Map as LeafletMap, TileLayer, Marker, Popup } from 'react-leaflet';\r\n\r\n// fix react-leaflet markers - see https://github.com/PaulLeCam/react-leaflet/issues/453#issuecomment-410450387\r\nimport L from 'leaflet';\r\ndelete L.Icon.Default.prototype._getIconUrl;\r\nL.Icon.Default.mergeOptions({\r\n    iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\r\n    iconUrl: require('leaflet/dist/images/marker-icon.png'),\r\n    shadowUrl: require('leaflet/dist/images/marker-shadow.png')\r\n});\r\n\r\nfunction MarkerWithPopup(props) {\r\n  const popupText = props.popupText;\r\n  const position = props.position;\r\n\r\n  if (popupText) {\r\n    return (\r\n      <Marker position={position}>\r\n        <Popup>\r\n          {popupText}\r\n        </Popup>\r\n      </Marker>\r\n    ) \r\n  }\r\n\r\n  return <Marker position={position}/>\r\n}\r\n\r\nfunction MarkersMap(props) {\r\n  const center = [0,0];\r\n  const zoom = 1;\r\n\r\n  // React won't be happy if we pass in two markers that want the same position and popup text,\r\n  // but that shouldn't happen anyway.\r\n  const markers = props.data.map(m => <MarkerWithPopup position={m.position} popupText={m.popupText} key={m.position + m.popupText} />);\r\n\r\n  return (\r\n    <LeafletMap center={center} zoom={zoom}>\r\n      <TileLayer\r\n        attribution='Thunderforest'\r\n        url='https://{s}.tile.thunderforest.com/landscape/{z}/{x}/{y}.png?apikey=7ee1e377fdd34773b610a69bd8e96e6f'\r\n      />\r\n      {markers}\r\n    </LeafletMap>\r\n  );\r\n}\r\n\r\nexport {MarkersMap};","import React from 'react';\r\n\r\nfunction SourceCell(props) {\r\n\treturn (\r\n\t\t<button className='link-button' onClick={() => props.detailFn(props.language.inventory_id)}>\r\n\t\t\t{props.language.inventory_id}\t\t\r\n\t\t</button>\r\n\t);\r\n}\r\n\r\nfunction SourcePanel(props) {\t\t\r\n  // Note 'doculect' here - this is correct; the rest of the code is lacking zhengming (TODO)\t\t\r\n  const doculect = props.doculect;\t\t\r\n  // Format author list\t\t\r\n  // If there are multiple authors, use the format Lastname(, Lastname...) & Lastname.\t\t\r\n  // If there's only one author, use Lastname, Firstname.\t\t\r\n  const authors_arr = doculect.source_author.split(';');\t\t\r\n  const authors = (\r\n    (authors_arr.length > 1) ? \t\t\r\n      (authors_arr.slice(0, authors_arr.length-1).map(x => x.split(',')[0]).join(', ') \t\t\r\n        + ' & ' \t\t\r\n        + authors_arr[authors_arr.length-1].split(',')[0])\t\t\r\n      : authors_arr[0])\t\t\r\n\r\n  const source_string = `${doculect.source_title}. ${authors}. ${doculect.source_year}`\t\t\r\n  const source_bibkey_url = `https://glottolog.org/resource/reference/id/${ doculect.source_bibkey }`\t\t\r\n\r\n  return (\t\t\r\n      <div>\t\r\n      \t<h3> { doculect.language_name } ({ doculect.inventory_id }) </h3>\t\r\n      \t<DialectInfoBox doculect={doculect}/>\r\n        <p>\t\t\r\n          { source_string }\t\t\r\n        </p>\t\t\r\n        <p>\t\t\r\n          <a href={source_bibkey_url}>\t\t\r\n            {doculect.source_bibkey}\t\t\r\n          </a>\t\t\r\n          <a href={doculect.source_url}>\t\t\r\n            { doculect.source_url ? '🔗' : '' }\t\t\r\n          </a>\t\t\r\n        </p>\t\t\r\n      </div>\t\t\r\n  )\t\t\r\n}\r\n\r\nfunction DialectInfoBox(props) {\r\n\tconst dialect_link = `https://glottolog.org/resource/languoid/id/${ props.doculect.dialect }`\r\n\tif (props.doculect.dialect) {\r\n\t\treturn (<p className='dialect-info'>Dialect: <a href={dialect_link}>{ props.doculect.dialect_name }</a></p>)\r\n\t} else if (props.doculect.dialect_name) {\r\n\t\treturn (<p className='dialect-info'>Dialect: { props.doculect.dialect_name }</p>)\r\n\t} else {\r\n\t\treturn (<span/>)\r\n\t}\r\n}\r\n\r\nfunction HelpText(props) {\r\n\treturn (<div id='help'><h3>About</h3>\r\n\r\n                    <p>This is a search tool for the Index Phonemica database.</p>\r\n\r\n                    <h3>Searching</h3>\r\n\r\n                    <p>A search query is minimally composed of a <em>search term</em>. There are two types of search term.</p>\r\n\r\n                    <p>A <em>phoneme term</em> consists of a phoneme enclosed in forward slashes, optionally preceded by \"no\". This will find all doculects that have (or don't have, if there's a preceding \"no\") the given phoneme.</p>\r\n\r\n                    <p>For example, <code>/t̪ʙ/</code> will return all doculects that contain the phoneme represented in Index Phonemica by the text string <code>t̪ʙ</code>, and <code>no /m/</code> will return all doculects that do not contain the phoneme represented in Index Phonemica by the text string <code>/m/</code>.</p>\r\n\r\n                    <p>A <em>feature term</em> consists of a number (optionally preceded by a <code>&lt;</code> or <code>&gt;</code> sign), a space, and a string of pluses and minuses followed (with no intervening space) by the name of the feature to search. For example, <code>2 +coronal</code> will return all doculects with exactly two [+coronal] segments, and <code>&gt;30 +syllabic</code> will return all doculects with more than thirty vowels.</p>\r\n\r\n                    <p>For the numeric component of the feature term, <code>no</code> can be used to mean <code>0</code>, and <code>any</code> can be used to mean <code>+0</code>.</p>\r\n\r\n                    <p>To search for multiple feature values on the same phoneme, separate the feature components with a semicolon. For example, <code>any +syllabic;+consonantal</code> will return a list of doculects with syllabic consonants.</p>\r\n\r\n                    <p>To ignore phonemes marked as marginal, use <code>-m</code>. To ignore phonemes marked as only occurring in loans, use <code>-l</code>. For example, Northwest Mekeo (meke1243-1) only contains coronal consonants in recent English loanwords; <code>no +coronal -l</code> will return this doculect, but <code>no +coronal</code> will not.</p>\r\n\r\n                    <p>(Some phonemes may be marked as both marginal and loan phonemes; this means that they are stated to be marginal outside loanwords, or to mostly occur in loans. Both <code>-m</code> and <code>-l</code> will cause these phonemes to be ignored.)</p>\r\n\r\n                    <p>Search terms may be joined by the logical operators <code>and</code> and <code>or</code>. These are postfix.</p>\r\n\r\n                    <p>To limit the search to languages with specific properties, use <code>field:value</code>. To limit the search to languages without specific properties, use <code>!field:value</code>. Values are case-insensitive, and properties of languages are taken from <a href=\"https://glottolog.org\">Glottolog</a>. For example, <code>country:australia</code> will return all doculects of languages that Glottolog lists as spoken in Australia. Spaces in the value must be replaced with underscores, as in <code>country:united_states</code>. See below for a full list of properties.</p>\r\n\r\n                    <h3>Examples</h3>\r\n\r\n                    <p className='example-text'>Find doculects with only two coronals:</p>\r\n                    <code className='example'>2 +coronal</code>\r\n                    <p className='example-text'>Find doculects with three or fewer vowels:</p>\r\n                    <code className='example'>&lt;4 +syllabic</code>\r\n                    <p className='example-text'>Find doculects with three or fewer vowels or the phoneme /d/:</p>\r\n                    <code className='example'>&lt;4 +syllabic /d/ or</code>\r\n                    <p className='example-text'>Find doculects with no rounded segments:</p>\r\n                    <code className='example'>no +round</code>\r\n                    <p className='example-text'>Find doculects with /d/ and no /m/:</p>\r\n                    <code className='example'>/d/ no /m/ and</code>\r\n\r\n                    <h3>List of features</h3>\r\n                    <p>Index Phonemica's feature system is currently derived from <a href=\"https://phoible.org/\">PHOIBLE</a>'s, but the names of the features have been converted from camelCase to snake_case, and 'raisedLarynxEjective' and 'loweredLarynxImplosive' have been renamed to <code>ejective</code> and <code>implosive</code>.</p>\r\n                    <code><ul>\r\n                        <li>tone\r\n                        </li><li>stress\r\n                        </li><li>syllabic\r\n                        </li><li>short\r\n                        </li><li>long\r\n                        </li><li>consonantal\r\n                        </li><li>sonorant\r\n                        </li><li>continuant\r\n                        </li><li>delayed_release\r\n                        </li><li>approximant\r\n                        </li><li>tap\r\n                        </li><li>trill\r\n                        </li><li>nasal\r\n                        </li><li>lateral\r\n                        </li><li>labial\r\n                        </li><li>round\r\n                        </li><li>labiodental\r\n                        </li><li>coronal\r\n                        </li><li>anterior\r\n                        </li><li>distributed\r\n                        </li><li>strident\r\n                        </li><li>dorsal\r\n                        </li><li>high\r\n                        </li><li>low\r\n                        </li><li>front\r\n                        </li><li>back\r\n                        </li><li>tense\r\n                        </li><li>retracted_tongue_root\r\n                        </li><li>advanced_tongue_root\r\n                        </li><li>periodic_glottal_source\r\n                        </li><li>epilaryngeal_source\r\n                        </li><li>spread_glottis\r\n                        </li><li>constricted_glottis\r\n                        </li><li>fortis\r\n                        </li><li>ejective\r\n                        </li><li>implosive\r\n                        </li><li>click</li>\r\n                    </ul></code>\r\n\r\n                    <h3>List of properties</h3>\r\n                    <ul>\t\t\r\n                      <li><code>inventory_id</code>\r\n                      </li><li><code>language_name</code> (as given in the source)\r\n                      </li><li><code>glottocode</code>\r\n                      </li><li><code>dialect</code>\r\n                      </li><li><code>dialect_name</code>\r\n                      </li><li><code>source_bibkey</code>\r\n                      </li><li><code>source_url</code>\r\n                      </li><li><code>source_doi</code>\r\n                      </li><li><code>name</code> (as given by Glottolog)\r\n                      </li><li><code>iso6393</code>\r\n                      </li><li><code>family</code>\r\n                      </li><li><code>genus</code>\r\n                      </li><li><code>macroarea</code> (eurasia, north_america, south_america, africa, australia, papunesia)\r\n                      </li><li><code>country_id</code> \r\n                      </li><li><code>country</code></li>\r\n                    </ul>\r\n                </div>)\r\n}\r\n\r\nexport { SourceCell, SourcePanel, HelpText }","import React, { Component } from 'react';\r\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\r\nimport 'react-tabs/style/react-tabs.css';\r\nimport { MarkersMap } from './MarkersMap';\r\nimport './App.css';\r\n\r\nimport { SourceCell, SourcePanel, HelpText } from './iphon'\r\n\r\nconst API_URL = window.location.protocol + '//indexphonemica.herokuapp.com/api/';\r\n\r\nfunction encode(thing) {\r\n  return encodeURIComponent(thing.toString().replace(/\\\\/g,'\\\\\\\\').replace(/&/g,'\\\\+').replace(/=/g,'\\\\e'));\r\n}\r\nfunction decode(thing) {\r\n  return decodeURIComponent(thing.replace(/\\\\\\\\/g,'\\\\').replace(/\\\\\\+/g,'&').replace(/\\\\e/g,'='));\r\n}\r\n\r\n// URL handling functions from Psmith\r\nfunction getHash() { // could cache this but eh\r\n  var hash = window.location.hash;\r\n  if (hash === '') return null;\r\n  hash = hash.slice(1, window.location.hash.length); // discard initial #\r\n\r\n  hash = hash.split('&');\r\n\r\n  var res = {};\r\n  for (let el of hash) {\r\n    let tmp = el.split('=');\r\n    if (tmp.length < 2) continue;\r\n    res[decode(tmp[0])] = decode(tmp[1]);\r\n  }\r\n  return res;\r\n}\r\n\r\nfunction setHash(k, v) {\r\n  var hash = getHash();\r\n\r\n  if (hash === null) hash = {};\r\n  hash[k] = v;\r\n  writeHash(hash);\r\n}\r\n\r\nfunction writeHash(hash) {\r\n  var res = Object.keys(hash).map(k => `${encode(k)}=${encode(hash[k])}`);\r\n  window.location.hash = res.join('&');\r\n}\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // If the hash points to a detail panel, we need to hide the help panel,\r\n    // to avoid flashing the help text as the detail query loads.\r\n    // We do this by displaying hidden fourth TabPanel that contains nothing.\r\n    var tabIndex = 0;\r\n    const hash = getHash();\r\n    if (hash && hash.hasOwnProperty('detail') && hash.detail) {\r\n      tabIndex = 4;\r\n    }\r\n\r\n    this.state = {\r\n      value: '', \r\n      searchResults: [], \r\n      shouldHaveSearchResults: false, // don't display 'no results' on load\r\n      searchLoading: false, // display a loading dialog while a search is loading\r\n      searchError: false,\r\n      detailResults: false,\r\n      detailError: false,\r\n      tabIndex: tabIndex\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSearch = this.handleSearch.bind(this);\r\n    this.detail = this.detail.bind(this);\r\n  }\r\n\r\n  // Pull linked searches out of the URL and send the network request.\r\n  componentDidMount() {\r\n    const hash = getHash();\r\n\r\n    try {\r\n      if (hash.search) {\r\n        this.search(hash.search);\r\n      }\r\n      if (hash.detail) {\r\n        this.detail(hash.detail);\r\n      }\r\n    } catch (e) {\r\n      window.location.hash = '';\r\n      return;\r\n    }\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({value: event.target.value});\r\n  }\r\n\r\n  handleSearch(event) {\r\n    event.preventDefault();\r\n    setHash('search', this.state.value);\r\n\r\n    this.search(this.state.value);\r\n  }\r\n\r\n  fetchJSON(queryURL) {\r\n    return fetch(queryURL, {\r\n      method: \"GET\"\r\n    }).then(\r\n      res => res.json()\r\n    ).then(res => {\r\n      if (res.hasOwnProperty('error')) {\r\n        throw new Error(res.error);\r\n      } else {\r\n        return res;\r\n      }\r\n    });\r\n  }\r\n\r\n  search(str) {\r\n    const queryURL = API_URL + 'query/' + encode(str);\r\n    this.setState({searching: true});\r\n    this.fetchJSON(queryURL, {\r\n      method: \"GET\"\r\n    }).then(\r\n      res => this.setState({\r\n        searchResults: res, \r\n        shouldHaveSearchResults: true,\r\n        searchError: false,\r\n        searching: false\r\n      })\r\n    ).catch(\r\n      err => this.setState({\r\n        searchResults: [],\r\n        shouldHaveSearchResults: false,\r\n        searchError: err,\r\n        searching: false\r\n      })\r\n    );\r\n  }\r\n\r\n  // We have to do the if (res.error) thing.\r\n  detail(id) {\r\n    const queryURL = API_URL + 'language/' + id;\r\n    setHash('detail', id);\r\n\r\n    fetch(queryURL, {\r\n      method: \"GET\"\r\n    }).then(\r\n      res => res.json()\r\n    ).then(res => { // add the ID so we can use that to make keys\r\n      res.id = id;\r\n      return res\r\n    }).then(res => {\r\n      if (res.error) {\r\n        this.setState({detailResults: false, detailError: res.error, tabIndex: 1})\r\n      } else {\r\n        this.setState({detailResults: res, detailError: false, tabIndex: 1})\r\n      }\r\n    }).catch(err => this.setState({detailResults: false, detailError: err, tabIndex: 1}))\r\n  }\r\n\r\n  render () {\r\n    const doculectRowToPopupText = function (row) {\r\n      return `${row.language_name} (${row.inventory_id})`;\r\n    }\r\n    const processMapData = function (searchResults) {\r\n      var languages = {};\r\n      searchResults.forEach(function (row) {\r\n        if (languages[row.glottocode] === undefined) {\r\n          languages[row.glottocode] = {\r\n            'position':  [row.latitude || 0, row.longitude || 0]\r\n          , 'popupText': doculectRowToPopupText(row)\r\n          }\r\n        } else {\r\n          languages[row.glottocode].popupText += (', ' + doculectRowToPopupText(row));\r\n        }\r\n      });\r\n      return Object.values(languages);\r\n    }\r\n\r\n    return (\r\n      <main className=\"container\">\r\n        <div className=\"row\">\r\n          <section id=\"search\" className=\"col-sm\">\r\n            <form onSubmit={this.handleSearch}>\r\n              <div id=\"input-wrapper\">\r\n                <input id=\"in\" type=\"text\" value={this.state.value} onChange={this.handleChange} />\r\n              </div>\r\n              <input id=\"submit\" type=\"submit\" value=\"Search\" />\r\n              { this.state.searching ? <SearchingIcon/> : '' }\r\n            </form>\r\n            \r\n            <div id=\"res\">\r\n              <ErrorDialog err={this.state.searchError}/>\r\n              {this.state.shouldHaveSearchResults ? <SearchResults value={this.state.searchResults} detailFn={this.detail}/> : ''}\r\n            </div>\r\n          </section>\r\n\r\n          <section id=\"tabnav\" className=\"col-sm\">\r\n            <Tabs selectedIndex={this.state.tabIndex} onSelect={tabIndex => this.setState({ tabIndex })}>\r\n              <TabList>\r\n                <Tab>Help</Tab>\r\n                <Tab disabled={!this.state.detailResults}>Detail</Tab>\r\n                <Tab disabled={!this.state.searchResults}>Map</Tab>\r\n              </TabList>\r\n              <TabPanel>\r\n                <HelpText/>\r\n              </TabPanel>\r\n              <TabPanel>\r\n                {\r\n                  this.state.detailError ? \r\n                       <ErrorDialog err={this.state.detailError}/> \r\n                    : ( this.state.detailResults ?\r\n                        <DetailPanel language={this.state.detailResults} /> \r\n                        : '' )\r\n                }\r\n              </TabPanel>\r\n              <TabPanel>\r\n                <MarkersMap data={processMapData(this.state.searchResults)} />\r\n              </TabPanel>\r\n            </Tabs>\r\n          </section>\r\n        </div>\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nfunction SearchingIcon () {\r\n  return (\r\n    <span>Loading...</span>\r\n  )\r\n}\r\n\r\n// ----------------\r\n// -- Components --\r\n// ----------------\r\n\r\nfunction ErrorDialog(props) {\r\n  if (!props.err) return (<div></div>);\r\n  var errTxt = props.err.toString();\r\n\r\n  // make sure there's only one Error: before the text\r\n  if (!/[A-Za-z]*Error: /.test(errTxt)) errTxt = 'Error: ' + errTxt;\r\n  if (/Error: (E|e)rror:/.test(errTxt)) errTxt = 'E' + errTxt.slice(8); // replace 'error' with 'Error' - TODO should just make the backend behave\r\n  return (\r\n    <div className='error'>\r\n      {errTxt}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction SearchResults(props) {\r\n  if (props.value === false) return (<div>No results</div>);\r\n  return (\r\n    <table>\r\n      <tbody>\r\n        {props.value.map(language => <SearchResult key={language.inventory_id} language={language} detailFn={props.detailFn} />)}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nfunction SearchResult(props) {\r\n  return (\r\n    <tr>\r\n      <td>\r\n        <button className='link-button' onClick={() => props.detailFn(props.language.inventory_id)}>\r\n          {props.language.language_name}\r\n        </button>\r\n      </td>\r\n      <td className='source-cell'>\r\n        <SourceCell language={props.language} /> \r\n      </td>\r\n      <td>\r\n        {props.language.phonemes ? <Segments segments={props.language.phonemes}/> : ''}\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nfunction DetailPanel(props) {\r\n  const doculect = props.language;\r\n  return (\r\n  <div className='sticky-wrapper-wrapper'>\r\n    <div className='sticky-wrapper'>\r\n      <div className='sticky-panel'>\r\n        <div>\r\n          <SourcePanel doculect={ doculect } />\r\n        </div>\r\n        <PhonemeMatrix name='Consonants' inv={ doculect.consonants } inv_id={ doculect.id } />\r\n        <PhonemeMatrix name='Clicks' inv={ doculect.clicks } inv_id={ doculect.id } />\r\n        <PhonemeMatrix name='Vowels' inv={ doculect.vowels } inv_id={ doculect.id } />\r\n        <PhonemeMatrix name='Diphthongs' inv= { doculect.diphthongs } inv_id={ doculect.id } />\r\n        <PhonemeArray name='Syllabic consonants' inv={ doculect.syllabic_consonants } inv_id={ doculect.id } />\r\n        <PhonemeArray name='Tones' inv={ doculect.tones } inv_id={ doculect.id } />\r\n        <div>\r\n          { doculect.notes ? <h4>Notes</h4> : '' }\r\n          { (doculect.notes || '').split('\\n').map(x => (<p key={x}>{x}</p>)) }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>);\r\n}\r\n\r\nfunction PhonemeMatrix(props) {\r\n  const size = props.inv.size;\r\n  if (size === 0) return (<div></div>);\r\n  const contents = props.inv.contents;\r\n\r\n  // TODO this is pretty hairy - there must be a better way!\r\n  return (<div>\r\n    <h4 className='language-segments'>{ props.name } ({ size })</h4>\r\n    <table className='inventory'><tbody>\r\n      {contents.map((y, i) => \r\n        <tr key={`${props.inv_id}-${i}`}>\r\n          {y.map((x, j) => \r\n            <td key={`${props.inv_id}-${i}-${j}}`}>\r\n              <Segments segments={x} />\r\n            </td>)}\r\n        </tr>)}\r\n    </tbody></table>\r\n  </div>)\r\n}\r\n\r\nfunction PhonemeArray(props) {\r\n  const size = props.inv.size;\r\n  if (size === 0) return (<div></div>);\r\n  const contents = props.inv.contents;\r\n\r\n  return (<div>\r\n    <h4 className='language-segments'>{ props.name } ({ size })</h4>\r\n    <span><Segments segments={contents} /></span>\r\n  </div>)\r\n}\r\n\r\nfunction Segments(props) {\r\n  return props.segments.map(x => Segment(x));\r\n}\r\n\r\nfunction Segment(props) {\r\n  // no good way to escape these\r\n  var openBrace  = '';\r\n  var closeBrace = '';\r\n\r\n  if (props.marginal) {\r\n    openBrace  += '(';\r\n    closeBrace += ')';\r\n  }\r\n  if (props.loan) {\r\n    openBrace  += '{';\r\n    closeBrace += '}';\r\n  }\r\n\r\n  return (\r\n    <span className='segment' key={ props.segment }>{ openBrace }{ props.segment }{ closeBrace }</span>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}