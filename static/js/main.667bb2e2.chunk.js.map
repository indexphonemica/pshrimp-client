{"version":3,"sources":["MarkersMap.js","iphon.js","App.js","serviceWorker.js","index.js"],"names":["MarkerWithPopup","props","popupText","position","Marker","Popup","MarkersMap","markers","data","map","m","key","center","zoom","TileLayer","attribution","url","L","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","SourceCell","href","language","inventory_id","target","rel","SourcePanel","doculect","authors_arr","source_author","split","authors","length","slice","x","join","source_year","source_string","source_title","source_bibkey_url","source_bibkey","language_name","DialectInfoBox","className","source_url","SourceTableHead","AllophonicRulePanel","rules","rule","AllophonicRule","ruleToString","phonemes","arrow","variation","realization","environment","dialect_link","dialect","dialect_name","HelpText","id","API_URL","window","location","protocol","encode","thing","encodeURIComponent","toString","replace","decode","decodeURIComponent","getHash","hash","res","tmp","setHash","k","v","Object","keys","writeHash","SearchingIcon","ErrorDialog","err","errTxt","test","SearchResults","value","SearchResult","detailFn","onClick","Segments","segments","allophones","AllophonicRules","allophonic_rules","DetailPanel","PhonemeMatrix","name","inv","consonants","inv_id","clicks","vowels","diphthongs","PhonemeArray","syllabic_consonants","tones","notes","size","contents","y","i","j","openBrace","closeBrace","marginal","loan","seg","segment","Segment","allophone_id","phoneme","App","tabIndex","hasOwnProperty","detail","state","searchResults","shouldHaveSearchResults","searchLoading","searchError","detailResults","detailError","handleChange","bind","handleSearch","search","this","e","event","setState","preventDefault","queryURL","fetch","method","then","json","Error","error","str","searching","fetchJSON","catch","doculectRowToPopupText","row","onSubmit","type","onChange","selectedIndex","onSelect","disabled","languages","forEach","undefined","glottocode","latitude","longitude","values","processMapData","Component","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.667bb2e2.chunk.js","sourcesContent":["import React from 'react';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport { Map as LeafletMap, TileLayer, Marker, Popup } from 'react-leaflet';\r\n\r\n// fix react-leaflet markers - see https://github.com/PaulLeCam/react-leaflet/issues/453#issuecomment-410450387\r\nimport L from 'leaflet';\r\ndelete L.Icon.Default.prototype._getIconUrl;\r\nL.Icon.Default.mergeOptions({\r\n    iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\r\n    iconUrl: require('leaflet/dist/images/marker-icon.png'),\r\n    shadowUrl: require('leaflet/dist/images/marker-shadow.png')\r\n});\r\n\r\nfunction MarkerWithPopup(props) {\r\n  const popupText = props.popupText;\r\n  const position = props.position;\r\n\r\n  if (popupText) {\r\n    return (\r\n      <Marker position={position}>\r\n        <Popup>\r\n          {popupText}\r\n        </Popup>\r\n      </Marker>\r\n    ) \r\n  }\r\n\r\n  return <Marker position={position}/>\r\n}\r\n\r\nfunction MarkersMap(props) {\r\n  const center = [0,0];\r\n  const zoom = 1;\r\n\r\n  // React won't be happy if we pass in two markers that want the same position and popup text,\r\n  // but that shouldn't happen anyway.\r\n  const markers = props.data.map(m => <MarkerWithPopup position={m.position} popupText={m.popupText} key={m.position + m.popupText} />);\r\n\r\n  return (\r\n    <LeafletMap center={center} zoom={zoom}>\r\n      <TileLayer\r\n        attribution='Thunderforest'\r\n        url='https://{s}.tile.thunderforest.com/landscape/{z}/{x}/{y}.png?apikey=7ee1e377fdd34773b610a69bd8e96e6f'\r\n      />\r\n      {markers}\r\n    </LeafletMap>\r\n  );\r\n}\r\n\r\nexport {MarkersMap};","import React from 'react';\r\n\r\nfunction SourceCell(props) {\r\n\treturn (\r\n\t\t<a href={\"http://indexphonemica.net/doculects/\" + props.language.inventory_id} target=\"_blank\" rel=\"noopener noreferrer\">\r\n\t\t\t{props.language.inventory_id}\t\t\r\n\t\t</a>\r\n\t);\r\n}\r\n\r\nfunction SourcePanel(props) {\t\t\r\n  // Note 'doculect' here - this is correct; the rest of the code is lacking zhengming (TODO)\t\t\r\n  const doculect = props.doculect;\t\t\r\n  // Format author list\t\t\r\n  // If there are multiple authors, use the format Lastname(, Lastname...) & Lastname.\t\t\r\n  // If there's only one author, use Lastname, Firstname.\r\n  const authors_arr = doculect.source_author.split(';');\r\n  var authors = ( // yeesh. TODO clean this up?\r\n    (authors_arr.length > 1) ? \t\t\r\n      (authors_arr.slice(0, authors_arr.length-1).map(x => x.split(',')[0]).join(', ') \t\t\r\n        + ' & ' \t\t\r\n        + authors_arr[authors_arr.length-1].split(',')[0])\t\t\r\n      : authors_arr[0])\r\n  // special-case unknowns for clarity\r\n  if (authors === 'Unknown') authors = 'Unknown author';\r\n  if (doculect.source_year === null) doculect.source_year = 'Unknown year';\r\n\r\n  // another thing: remove final periods. \"Lastname, Firstname M..\" is a little ugly.\r\n  if (authors[authors.length-1] === '.') authors = authors.slice(0, authors.length-1);\r\n\r\n  const source_string = `${doculect.source_title}. ${authors}. ${doculect.source_year}.`\r\n  const source_bibkey_url = `https://glottolog.org/resource/reference/id/${ doculect.source_bibkey }`\t\t\r\n\r\n  return (\t\t\r\n      <div>\t\r\n      \t<h3> { doculect.language_name } <a href={\"http://indexphonemica.net/doculects/\" + doculect.inventory_id}>({ doculect.inventory_id })</a></h3>\t\r\n      \t<DialectInfoBox doculect={doculect}/>\r\n        <div className='source-box'>\r\n          <p>\t\t\r\n            { source_string }\t\t\r\n          </p>\t\t\r\n          <p>\t\t\r\n            <a href={source_bibkey_url}>\t\t\r\n              {doculect.source_bibkey}\t\t\r\n            </a>\t\t\r\n            <a href={doculect.source_url}>\t\t\r\n              { doculect.source_url ? '🔗' : '' }\t\t\r\n            </a>\t\t\r\n          </p>\t\r\n        </div>\t\r\n      </div>\t\t\r\n  )\t\t\r\n}\r\n\r\nfunction SourceTableHead(props) {\r\n  return (<thead>\r\n      <th>Name</th>\r\n      <th>Glottocode</th>\r\n      <th>Results</th>\r\n    </thead>)\r\n}\r\n\r\nfunction AllophonicRulePanel(props) {\r\n  const rules = props.rules;\r\n\r\n  return (<div><h4>Allophonic rules</h4>\r\n    {rules.map(rule => <AllophonicRule key={ruleToString(rule)} rule={rule}/>)}\r\n  </div>)\r\n}\r\nfunction AllophonicRule(props) {\r\n  const rule = props.rule;\r\n  return (<div>\r\n    {ruleToString(rule)}\r\n  </div>);\r\n}\r\n\r\nfunction ruleToString(rule) {\r\n  const phonemes    = rule.phonemes.join('·');\r\n  const arrow       = rule.variation ? '>~' : '>';\r\n  const realization = rule.realization;\r\n  const environment = rule.environment;\r\n  return `${phonemes} ${arrow} ${realization} / ${environment}`;\r\n}\r\n\r\nfunction DialectInfoBox(props) {\r\n\tconst dialect_link = `https://glottolog.org/resource/languoid/id/${ props.doculect.dialect }`\r\n\tif (props.doculect.dialect) {\r\n\t\treturn (<p className='dialect-info'>Dialect: <a href={dialect_link}>{ props.doculect.dialect_name }</a></p>)\r\n\t} else if (props.doculect.dialect_name) {\r\n\t\treturn (<p className='dialect-info'>Dialect: { props.doculect.dialect_name }</p>)\r\n\t} else {\r\n\t\treturn (<span/>)\r\n\t}\r\n}\r\n\r\nfunction HelpText(props) {\r\n\treturn (<div id='help'><h3>About</h3>\r\n\r\n                    <p>This is a search tool for the <a href=\"http://indexphonemica.net\">Index Phonemica</a> database.</p>\r\n\r\n                    <h3>Searching</h3>\r\n\r\n                    <p>A search query is minimally composed of a <em>search term</em>. There are four types of search term.</p>\r\n\r\n                    <p>A <em>phoneme term</em> consists of a phoneme enclosed in forward slashes, optionally preceded by \"no\". This will find all doculects that have (or don't have, if there's a preceding \"no\") the given phoneme.</p>\r\n\r\n                    <p>For example, <code>/t̪ʙ/</code> will return all doculects that contain the phoneme represented in Index Phonemica by the text string <code>t̪ʙ</code>, and <code>no /m/</code> will return all doculects that do not contain the phoneme represented in Index Phonemica by the text string <code>/m/</code>.</p>\r\n\r\n                    <p>A <em>feature term</em> consists of a number (optionally preceded by a <code>&lt;</code> or <code>&gt;</code> sign), a space, and a string of pluses and minuses followed (with no intervening space) by the name of the feature to search. For example, <code>2 +coronal</code> will return all doculects with exactly two [+coronal] segments, and <code>&gt;30 +syllabic</code> will return all doculects with more than thirty vowels.</p>\r\n\r\n                    <p>For the numeric component of the feature term, <code>no</code> can be used to mean <code>0</code>, and <code>any</code> can be used to mean <code>+0</code>.</p>\r\n\r\n                    <p>To search for multiple feature values on the same phoneme, separate the feature components with a semicolon. For example, <code>any +syllabic;+consonantal</code> will return a list of doculects with syllabic consonants.</p>\r\n\r\n                    <p>To ignore phonemes marked as marginal, use <code>-m</code>. To ignore phonemes marked as only occurring in loans, use <code>-l</code>. For example, Northwest Mekeo (meke1243-1) only contains coronal consonants in recent English loanwords; <code>no +coronal -l</code> will return this doculect, but <code>no +coronal</code> will not.</p>\r\n\r\n                    <p>(Some phonemes may be marked as both marginal and loan phonemes; this means that they are stated to be marginal outside loanwords, or to mostly occur in loans. Both <code>-m</code> and <code>-l</code> will cause these phonemes to be ignored.)</p>\r\n\r\n                    <p>A <em>property term</em> searches for languages with specific properties. Property terms are of the form <code>field:value</code>. To limit the search to languages without specific properties, use <code>!field:value</code>. Values are case-insensitive, and properties of languages are taken from <a href=\"https://glottolog.org\">Glottolog</a>. For example, <code>country:australia</code> will return all doculects of languages that Glottolog lists as spoken in Australia. Spaces in the value must be replaced with underscores, as in <code>country:united_states</code>. See below for a full list of properties.</p>\r\n\r\n                    <p>An <em>allophone term</em> searches allophonic rules. These use phonemes or feature bundles separated by <code>&gt;</code>. For example, <code>+coronal > -coronal</code> searches for doculects with allophonic rules that transform a coronal phoneme into a non-coronal realization, and <code>/t/ > +tap</code> searches for doculects with allophonic rules transforming the phoneme <code>/t/</code> into a tap.</p>\r\n\r\n                    <p>Search terms may be joined by the logical operators <code>and</code> and <code>or</code>. These are postfix.</p>\r\n\r\n                    <h3>Examples</h3>\r\n\r\n                    <p className='example-text'>Find doculects with only two coronals:</p>\r\n                    <code className='example'>2 +coronal</code>\r\n                    <p className='example-text'>Find doculects with three or fewer vowels:</p>\r\n                    <code className='example'>&lt;4 +syllabic</code>\r\n                    <p className='example-text'>Find doculects with three or fewer vowels or the phoneme /d/:</p>\r\n                    <code className='example'>&lt;4 +syllabic /d/ or</code>\r\n                    <p className='example-text'>Find doculects with no dorsal consonants (excluding semivowels):</p>\r\n                    <code className='example'>no +dorsal;+consonantal</code>\r\n                    <p className='example-text'>Find doculects with /d/ and no /m/:</p>\r\n                    <code className='example'>/d/ no /m/ and</code>\r\n                    <p className='example-text'>Find doculects in Papua New Guinea with t-flapping:</p>\r\n                    <code className='example'>country:papua_new_guinea /t/ > +tap and</code>\r\n\r\n                    <h3>List of features</h3>\r\n                    <p>Index Phonemica's feature system is currently derived from <a href=\"https://phoible.org/\">PHOIBLE</a>'s, but the names of the features have been converted from camelCase to snake_case, and 'raisedLarynxEjective' and 'loweredLarynxImplosive' have been renamed to <code>ejective</code> and <code>implosive</code>.</p>\r\n                    <code><ul>\r\n                        <li>tone\r\n                        </li><li>stress\r\n                        </li><li>syllabic\r\n                        </li><li>short\r\n                        </li><li>long\r\n                        </li><li>consonantal\r\n                        </li><li>sonorant\r\n                        </li><li>continuant\r\n                        </li><li>delayed_release\r\n                        </li><li>approximant\r\n                        </li><li>tap\r\n                        </li><li>trill\r\n                        </li><li>nasal\r\n                        </li><li>lateral\r\n                        </li><li>labial\r\n                        </li><li>round\r\n                        </li><li>labiodental\r\n                        </li><li>coronal\r\n                        </li><li>anterior\r\n                        </li><li>distributed\r\n                        </li><li>strident\r\n                        </li><li>dorsal\r\n                        </li><li>high\r\n                        </li><li>low\r\n                        </li><li>front\r\n                        </li><li>back\r\n                        </li><li>tense\r\n                        </li><li>retracted_tongue_root\r\n                        </li><li>advanced_tongue_root\r\n                        </li><li>periodic_glottal_source\r\n                        </li><li>epilaryngeal_source\r\n                        </li><li>spread_glottis\r\n                        </li><li>constricted_glottis\r\n                        </li><li>fortis\r\n                        </li><li>ejective\r\n                        </li><li>implosive\r\n                        </li><li>click</li>\r\n                    </ul></code>\r\n\r\n                    <h3>List of properties</h3>\r\n                    <ul>\t\t\r\n                      <li><code>inventory_id</code>\r\n                      </li><li><code>language_name</code> (as given in the source)\r\n                      </li><li><code>glottocode</code>\r\n                      </li><li><code>dialect</code>\r\n                      </li><li><code>dialect_name</code>\r\n                      </li><li><code>source_bibkey</code>\r\n                      </li><li><code>source_url</code>\r\n                      </li><li><code>source_doi</code>\r\n                      </li><li><code>name</code> (as given by Glottolog)\r\n                      </li><li><code>iso6393</code>\r\n                      </li><li><code>family</code>\r\n                      </li><li><code>genus</code>\r\n                      </li><li><code>macroarea</code> (eurasia, north_america, south_america, africa, australia, papunesia)\r\n                      </li><li><code>country_id</code> \r\n                      </li><li><code>country</code></li>\r\n                    </ul>\r\n                </div>)\r\n}\r\n\r\nexport { SourceCell, SourcePanel, SourceTableHead, AllophonicRulePanel, HelpText }","import React, { Component } from 'react';\r\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\r\nimport 'react-tabs/style/react-tabs.css';\r\nimport { MarkersMap } from './MarkersMap';\r\nimport './App.css';\r\n\r\nimport { SourceCell, SourcePanel, SourceTableHead, AllophonicRulePanel, HelpText } from './iphon'\r\n\r\nconst API_URL = window.location.protocol + '//indexphonemica.herokuapp.com/api/';\r\n\r\nfunction encode(thing) {\r\n  return encodeURIComponent(thing.toString().replace(/\\\\/g,'\\\\\\\\').replace(/&/g,'\\\\+').replace(/=/g,'\\\\e'));\r\n}\r\nfunction decode(thing) {\r\n  return decodeURIComponent(thing.replace(/\\\\\\\\/g,'\\\\').replace(/\\\\\\+/g,'&').replace(/\\\\e/g,'='));\r\n}\r\n\r\n// URL handling functions from Psmith\r\nfunction getHash() { // could cache this but eh\r\n  var hash = window.location.hash;\r\n  if (hash === '') return null;\r\n  hash = hash.slice(1, window.location.hash.length); // discard initial #\r\n\r\n  hash = hash.split('&');\r\n\r\n  var res = {};\r\n  for (let el of hash) {\r\n    let tmp = el.split('=');\r\n    if (tmp.length < 2) continue;\r\n    res[decode(tmp[0])] = decode(tmp[1]);\r\n  }\r\n  return res;\r\n}\r\n\r\nfunction setHash(k, v) {\r\n  var hash = getHash();\r\n\r\n  if (hash === null) hash = {};\r\n  hash[k] = v;\r\n  writeHash(hash);\r\n}\r\n\r\nfunction writeHash(hash) {\r\n  var res = Object.keys(hash).map(k => `${encode(k)}=${encode(hash[k])}`);\r\n  window.location.hash = res.join('&');\r\n}\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // If the hash points to a detail panel, we need to hide the help panel,\r\n    // to avoid flashing the help text as the detail query loads.\r\n    // We do this by displaying hidden fourth TabPanel that contains nothing.\r\n    var tabIndex = 0;\r\n    const hash = getHash();\r\n    if (hash && hash.hasOwnProperty('detail') && hash.detail) {\r\n      tabIndex = 4;\r\n    }\r\n\r\n    this.state = {\r\n      value: '', \r\n      searchResults: [], \r\n      shouldHaveSearchResults: false, // don't display 'no results' on load\r\n      searchLoading: false, // display a loading dialog while a search is loading\r\n      searchError: false,\r\n      detailResults: false,\r\n      detailError: false,\r\n      tabIndex: tabIndex\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSearch = this.handleSearch.bind(this);\r\n    this.detail = this.detail.bind(this);\r\n  }\r\n\r\n  // Pull linked searches out of the URL and send the network request.\r\n  componentDidMount() {\r\n    const hash = getHash();\r\n\r\n    try {\r\n      if (hash.search) {\r\n        this.search(hash.search);\r\n      }\r\n      if (hash.detail) {\r\n        this.detail(hash.detail);\r\n      }\r\n    } catch (e) {\r\n      window.location.hash = '';\r\n      return;\r\n    }\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({value: event.target.value});\r\n  }\r\n\r\n  handleSearch(event) {\r\n    event.preventDefault();\r\n    setHash('search', this.state.value);\r\n\r\n    this.search(this.state.value);\r\n  }\r\n\r\n  fetchJSON(queryURL) {\r\n    return fetch(queryURL, {\r\n      method: \"GET\"\r\n    }).then(\r\n      res => res.json()\r\n    ).then(res => {\r\n      if (res.hasOwnProperty('error')) {\r\n        throw new Error(res.error);\r\n      } else {\r\n        return res;\r\n      }\r\n    });\r\n  }\r\n\r\n  search(str) {\r\n    const queryURL = API_URL + 'query/' + encode(str);\r\n    this.setState({searching: true});\r\n    this.fetchJSON(queryURL, {\r\n      method: \"GET\"\r\n    }).then(\r\n      res => this.setState({\r\n        searchResults: res, \r\n        shouldHaveSearchResults: true,\r\n        searchError: false,\r\n        searching: false\r\n      })\r\n    ).catch(\r\n      err => this.setState({\r\n        searchResults: [],\r\n        shouldHaveSearchResults: false,\r\n        searchError: err,\r\n        searching: false\r\n      })\r\n    );\r\n  }\r\n\r\n  // We have to do the if (res.error) thing.\r\n  detail(id) {\r\n    const queryURL = API_URL + 'language/' + id;\r\n    setHash('detail', id);\r\n\r\n    fetch(queryURL, {\r\n      method: \"GET\"\r\n    }).then(\r\n      res => res.json()\r\n    ).then(res => { // add the ID so we can use that to make keys\r\n      res.id = id;\r\n      return res\r\n    }).then(res => {\r\n      if (res.error) {\r\n        this.setState({detailResults: false, detailError: res.error, tabIndex: 1})\r\n      } else {\r\n        this.setState({detailResults: res, detailError: false, tabIndex: 1})\r\n      }\r\n    }).catch(err => this.setState({detailResults: false, detailError: err, tabIndex: 1}))\r\n  }\r\n\r\n  render () {\r\n    const doculectRowToPopupText = function (row) {\r\n      return `${row.language_name} (${row.inventory_id})`;\r\n    }\r\n    const processMapData = function (searchResults) {\r\n      var languages = {};\r\n      searchResults.forEach(function (row) {\r\n        if (languages[row.glottocode] === undefined) {\r\n          languages[row.glottocode] = {\r\n            'position':  [row.latitude || 0, row.longitude || 0]\r\n          , 'popupText': doculectRowToPopupText(row)\r\n          }\r\n        } else {\r\n          languages[row.glottocode].popupText += (', ' + doculectRowToPopupText(row));\r\n        }\r\n      });\r\n      return Object.values(languages);\r\n    }\r\n\r\n    return (\r\n      <main className=\"container\">\r\n        <div className=\"row\">\r\n          <section id=\"search\" className=\"col-sm\">\r\n            <form onSubmit={this.handleSearch}>\r\n              <div id=\"input-wrapper\">\r\n                <input id=\"in\" type=\"text\" value={this.state.value} onChange={this.handleChange} />\r\n              </div>\r\n              <input id=\"submit\" type=\"submit\" value=\"Search\" />\r\n              { this.state.searching ? <SearchingIcon/> : '' }\r\n            </form>\r\n            \r\n            <div id=\"res\">\r\n              <ErrorDialog err={this.state.searchError}/>\r\n              {this.state.shouldHaveSearchResults ? <SearchResults value={this.state.searchResults} detailFn={this.detail}/> : ''}\r\n            </div>\r\n          </section>\r\n\r\n          <section id=\"tabnav\" className=\"col-sm\">\r\n            <Tabs selectedIndex={this.state.tabIndex} onSelect={tabIndex => this.setState({ tabIndex })}>\r\n              <TabList>\r\n                <Tab>Help</Tab>\r\n                <Tab disabled={!this.state.detailResults}>Detail</Tab>\r\n                <Tab disabled={!this.state.searchResults}>Map</Tab>\r\n              </TabList>\r\n              <TabPanel>\r\n                <HelpText/>\r\n              </TabPanel>\r\n              <TabPanel>\r\n                {\r\n                  this.state.detailError ? \r\n                       <ErrorDialog err={this.state.detailError}/> \r\n                    : ( this.state.detailResults ?\r\n                        <DetailPanel language={this.state.detailResults} /> \r\n                        : '' )\r\n                }\r\n              </TabPanel>\r\n              <TabPanel>\r\n                <MarkersMap data={processMapData(this.state.searchResults)} />\r\n              </TabPanel>\r\n            </Tabs>\r\n          </section>\r\n        </div>\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nfunction SearchingIcon () {\r\n  return (\r\n    <span>Loading...</span>\r\n  )\r\n}\r\n\r\n// ----------------\r\n// -- Components --\r\n// ----------------\r\n\r\nfunction ErrorDialog(props) {\r\n  if (!props.err) return (<div></div>);\r\n  var errTxt = props.err.toString();\r\n\r\n  // make sure there's only one Error: before the text\r\n  if (!/[A-Za-z]*Error: /.test(errTxt)) errTxt = 'Error: ' + errTxt;\r\n  if (/Error: (E|e)rror:/.test(errTxt)) errTxt = 'E' + errTxt.slice(8); // replace 'error' with 'Error' - TODO should just make the backend behave\r\n  return (\r\n    <div className='error'>\r\n      {errTxt}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction SearchResults(props) {\r\n  if (props.value === false) return (<div>No results</div>);\r\n  return (\r\n    <table>\r\n      <SourceTableHead />\r\n      <tbody>\r\n        {props.value.map(language => <SearchResult key={language.inventory_id} language={language} detailFn={props.detailFn} />)}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nfunction SearchResult(props) {\r\n  return (\r\n    <tr>\r\n      <td>\r\n        <button className='link-button' onClick={() => props.detailFn(props.language.inventory_id)}>\r\n          {props.language.language_name}\r\n        </button>\r\n      </td>\r\n      <td className='source-cell'>\r\n        <SourceCell language={props.language} /> \r\n      </td>\r\n      <td>\r\n        {props.language.phonemes ? <Segments segments={props.language.phonemes}/> : ''}\r\n        {props.language.allophones ? <AllophonicRules allophonic_rules={props.language.allophones}/> : ''}\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nfunction DetailPanel(props) {\r\n  const doculect = props.language;\r\n  return (\r\n  <div className='sticky-wrapper-wrapper'>\r\n    <div className='sticky-wrapper'>\r\n      <div className='sticky-panel'>\r\n        <div>\r\n          <SourcePanel doculect={ doculect } />\r\n        </div>\r\n        <PhonemeMatrix name='Consonants' inv={ doculect.consonants } inv_id={ doculect.id } />\r\n        <PhonemeMatrix name='Clicks' inv={ doculect.clicks } inv_id={ doculect.id } />\r\n        <PhonemeMatrix name='Vowels' inv={ doculect.vowels } inv_id={ doculect.id } />\r\n        <PhonemeMatrix name='Diphthongs' inv= { doculect.diphthongs } inv_id={ doculect.id } />\r\n        <PhonemeArray name='Syllabic consonants' inv={ doculect.syllabic_consonants } inv_id={ doculect.id } />\r\n        <PhonemeArray name='Tones' inv={ doculect.tones } inv_id={ doculect.id } />\r\n        <div>\r\n          { doculect.notes ? <h4>Notes</h4> : '' }\r\n          { (doculect.notes || '').split('\\n').map(x => (<p key={x}>{x}</p>)) }\r\n        </div>\r\n        { doculect.allophonic_rules && doculect.allophonic_rules.length > 0 ? <AllophonicRulePanel rules={ doculect.allophonic_rules } /> : '' }\r\n      </div>\r\n    </div>\r\n  </div>);\r\n}\r\n\r\nfunction PhonemeMatrix(props) {\r\n  const size = props.inv.size;\r\n  if (size === 0) return (<div></div>);\r\n  const contents = props.inv.contents;\r\n\r\n  // TODO this is pretty hairy - there must be a better way!\r\n  return (<div>\r\n    <h4 className='language-segments'>{ props.name } ({ size })</h4>\r\n    <table className='inventory'><tbody>\r\n      {contents.map((y, i) => \r\n        <tr key={`${props.inv_id}-${i}`}>\r\n          {y.map((x, j) => \r\n            <td key={`${props.inv_id}-${i}-${j}}`}>\r\n              <Segments segments={x} />\r\n            </td>)}\r\n        </tr>)}\r\n    </tbody></table>\r\n  </div>)\r\n}\r\n\r\nfunction PhonemeArray(props) {\r\n  const size = props.inv.size;\r\n  if (size === 0) return (<div></div>);\r\n  const contents = props.inv.contents;\r\n\r\n  return (<div>\r\n    <h4 className='language-segments'>{ props.name } ({ size })</h4>\r\n    <span><Segments segments={contents} /></span>\r\n  </div>)\r\n}\r\n\r\nfunction Segments(props) {\r\n  return props.segments.map(x => Segment(x));\r\n}\r\n\r\nfunction Segment(props) {\r\n  // no good way to escape these\r\n  var openBrace  = '';\r\n  var closeBrace = '';\r\n\r\n  if (props.marginal) {\r\n    openBrace  += '(';\r\n  }\r\n  if (props.loan) {\r\n    openBrace  += '{'; \r\n    closeBrace += '}';\r\n  }\r\n  if (props.marginal) {\r\n    closeBrace += ')';\r\n  }\r\n\r\n  const seg = openBrace + props.segment + closeBrace;\r\n\r\n  // Adding a space to the Segment el looks like it produces a trailing space after the end of Segments\r\n  // if you highlight it in a certain way, but that seems to be a browser artifact... \r\n  // I rewrote Segments to tell Segment whether it's the last one in the array and leave off the space \r\n  // if so, and it did the same thing. And I notice now that this happens elsewhere. So this is fine.\r\n\r\n  return (\r\n    <span key={ seg }>{ seg } </span>\r\n  )\r\n}\r\n\r\nfunction AllophonicRules(props) {\r\n  return props.allophonic_rules.map(x => AllophonicRule(x));\r\n}\r\n\r\nfunction AllophonicRule(props) {\r\n  var arrow = '>';\r\n  if (props.variation) arrow += '~';\r\n  return (\r\n    <div className='allophonic-rule' key={ props.allophone_id }>\r\n      {props.phoneme} {arrow} {props.realization} {props.environment ? '/' : ''} {props.environment}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}